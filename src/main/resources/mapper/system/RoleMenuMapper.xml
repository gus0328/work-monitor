<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iccm.system.mapper.RoleMenuMapper">
    
    <resultMap type="RoleMenu" id="RoleMenuResult">
        <result property="roleId"    column="role_id"    />
        <result property="menuId"    column="menu_id"    />
    </resultMap>

    <sql id="selectRoleMenuVo">
        select role_id, menu_id from role_menu
    </sql>

    <select id="getMenuIdsByUserId" parameterType="Object" resultType="Long">
        SELECT DISTINCT
        menu_id
        FROM
        role_menu
        WHERE
        role_id IN (
        SELECT
        role_id
        FROM
        sys_user_role
        WHERE
        user_id = #{userId}
        )
    </select>

    <select id="selectRoleMenuList" parameterType="RoleMenu" resultMap="RoleMenuResult">
        <include refid="selectRoleMenuVo"/>
        <where>  
        </where>
    </select>
    
    <select id="selectRoleMenuById" parameterType="Long" resultMap="RoleMenuResult">
        <include refid="selectRoleMenuVo"/>
        where role_id = #{roleId}
    </select>
        
    <insert id="insertRoleMenu" parameterType="RoleMenu">
        insert into role_menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null ">role_id,</if>
            <if test="menuId != null ">menu_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null ">#{roleId},</if>
            <if test="menuId != null ">#{menuId},</if>
         </trim>
    </insert>

    <update id="updateRoleMenu" parameterType="RoleMenu">
        update role_menu
        <trim prefix="SET" suffixOverrides=",">
            <if test="menuId != null ">menu_id = #{menuId},</if>
        </trim>
        where role_id = #{roleId}
    </update>

    <delete id="deleteRoleMenuById" parameterType="Long">
        delete from role_menu where role_id = #{roleId}
    </delete>

    <delete id="deleteRoleMenuByIds" parameterType="String">
        delete from role_menu where role_id in 
        <foreach item="roleId" collection="array" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

    <delete id="deleteByMenuIdAndRoleId" parameterType="Object">
        DELETE FROM role_menu WHERE role_id = #{roleId} and menu_id = #{menuId}
    </delete>
    
</mapper>